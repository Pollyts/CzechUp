// <auto-generated />
using CzechUp.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CzechUp.EF.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20250323095345_AddingGeneralWordId")]
    partial class AddingGeneralWordId
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CzechUp.EF.Models.GeneralOriginalWord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("GeneralTopicId")
                        .HasColumnType("integer");

                    b.Property<int>("LanguageLevelId")
                        .HasColumnType("integer");

                    b.Property<string>("Word")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("GeneralTopicId");

                    b.HasIndex("LanguageLevelId");

                    b.ToTable("GeneralOriginalWords");
                });

            modelBuilder.Entity("CzechUp.EF.Models.GeneralTopic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("GeneralTopics");
                });

            modelBuilder.Entity("CzechUp.EF.Models.GeneralWordExample", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("GeneralOriginalWordId")
                        .HasColumnType("integer");

                    b.Property<string>("OriginalExample")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TranslatedExample")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("GeneralOriginalWordId");

                    b.ToTable("GeneralWordExamples");
                });

            modelBuilder.Entity("CzechUp.EF.Models.GeneralWordForm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("OriginalWordId")
                        .HasColumnType("integer");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("WordForm")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("WordNumber")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OriginalWordId");

                    b.ToTable("GeneralWordForms");
                });

            modelBuilder.Entity("CzechUp.EF.Models.GeneralWordTranslation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("GeneralOriginalWordId")
                        .HasColumnType("integer");

                    b.Property<int>("LanguageId")
                        .HasColumnType("integer");

                    b.Property<string>("Translation")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("GeneralOriginalWordId");

                    b.HasIndex("LanguageId");

                    b.ToTable("GeneralWordTranslations");
                });

            modelBuilder.Entity("CzechUp.EF.Models.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("CzechUp.EF.Models.LanguageLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("LanguageLevels");
                });

            modelBuilder.Entity("CzechUp.EF.Models.Rule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Rules");
                });

            modelBuilder.Entity("CzechUp.EF.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RequiredLanguageLevelId")
                        .HasColumnType("integer");

                    b.Property<int>("TranslatedLanguageId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RequiredLanguageLevelId");

                    b.HasIndex("TranslatedLanguageId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CzechUp.EF.Models.UserOriginalWord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("LanguageLevelId")
                        .HasColumnType("integer");

                    b.Property<int?>("UserTopicId")
                        .HasColumnType("integer");

                    b.Property<string>("Word")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("LanguageLevelId");

                    b.HasIndex("UserTopicId");

                    b.ToTable("UserOriginalWords");
                });

            modelBuilder.Entity("CzechUp.EF.Models.UserTopic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("GeneralTopicId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GeneralTopicId");

                    b.HasIndex("UserId");

                    b.ToTable("UserTopics");
                });

            modelBuilder.Entity("CzechUp.EF.Models.UserWordExample", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("UserWordExamples");
                });

            modelBuilder.Entity("CzechUp.EF.Models.UserWordForm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("OriginalWordId")
                        .HasColumnType("integer");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserWordId")
                        .HasColumnType("integer");

                    b.Property<string>("WordForm")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("OriginalWordId");

                    b.ToTable("UserWordForms");
                });

            modelBuilder.Entity("CzechUp.EF.Models.UserWordTranslation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("OriginalWordId")
                        .HasColumnType("integer");

                    b.Property<int?>("TopicId")
                        .HasColumnType("integer");

                    b.Property<string>("Translation")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<string>("UserOriginalWordId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("WasLearned")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("OriginalWordId");

                    b.HasIndex("TopicId");

                    b.HasIndex("UserId");

                    b.ToTable("UserWordTranslations");
                });

            modelBuilder.Entity("CzechUp.EF.Models.GeneralOriginalWord", b =>
                {
                    b.HasOne("CzechUp.EF.Models.GeneralTopic", "GeneralTopic")
                        .WithMany()
                        .HasForeignKey("GeneralTopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CzechUp.EF.Models.LanguageLevel", "LanguageLevel")
                        .WithMany()
                        .HasForeignKey("LanguageLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GeneralTopic");

                    b.Navigation("LanguageLevel");
                });

            modelBuilder.Entity("CzechUp.EF.Models.GeneralWordExample", b =>
                {
                    b.HasOne("CzechUp.EF.Models.GeneralOriginalWord", "GeneralOriginalWord")
                        .WithMany()
                        .HasForeignKey("GeneralOriginalWordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GeneralOriginalWord");
                });

            modelBuilder.Entity("CzechUp.EF.Models.GeneralWordForm", b =>
                {
                    b.HasOne("CzechUp.EF.Models.GeneralOriginalWord", "OriginalWord")
                        .WithMany()
                        .HasForeignKey("OriginalWordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OriginalWord");
                });

            modelBuilder.Entity("CzechUp.EF.Models.GeneralWordTranslation", b =>
                {
                    b.HasOne("CzechUp.EF.Models.GeneralOriginalWord", "GeneralOriginalWord")
                        .WithMany()
                        .HasForeignKey("GeneralOriginalWordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CzechUp.EF.Models.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GeneralOriginalWord");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("CzechUp.EF.Models.User", b =>
                {
                    b.HasOne("CzechUp.EF.Models.LanguageLevel", "RequiredLanguageLevel")
                        .WithMany()
                        .HasForeignKey("RequiredLanguageLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CzechUp.EF.Models.Language", "TranslatedLanguage")
                        .WithMany()
                        .HasForeignKey("TranslatedLanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RequiredLanguageLevel");

                    b.Navigation("TranslatedLanguage");
                });

            modelBuilder.Entity("CzechUp.EF.Models.UserOriginalWord", b =>
                {
                    b.HasOne("CzechUp.EF.Models.LanguageLevel", "LanguageLevel")
                        .WithMany()
                        .HasForeignKey("LanguageLevelId");

                    b.HasOne("CzechUp.EF.Models.UserTopic", "UserTopic")
                        .WithMany()
                        .HasForeignKey("UserTopicId");

                    b.Navigation("LanguageLevel");

                    b.Navigation("UserTopic");
                });

            modelBuilder.Entity("CzechUp.EF.Models.UserTopic", b =>
                {
                    b.HasOne("CzechUp.EF.Models.GeneralTopic", "GeneralTopic")
                        .WithMany()
                        .HasForeignKey("GeneralTopicId");

                    b.HasOne("CzechUp.EF.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GeneralTopic");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CzechUp.EF.Models.UserWordForm", b =>
                {
                    b.HasOne("CzechUp.EF.Models.UserOriginalWord", "OriginalWord")
                        .WithMany()
                        .HasForeignKey("OriginalWordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OriginalWord");
                });

            modelBuilder.Entity("CzechUp.EF.Models.UserWordTranslation", b =>
                {
                    b.HasOne("CzechUp.EF.Models.UserOriginalWord", "OriginalWord")
                        .WithMany()
                        .HasForeignKey("OriginalWordId");

                    b.HasOne("CzechUp.EF.Models.UserTopic", "Topic")
                        .WithMany()
                        .HasForeignKey("TopicId");

                    b.HasOne("CzechUp.EF.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OriginalWord");

                    b.Navigation("Topic");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
